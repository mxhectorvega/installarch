#!/bin/sh
# Script principal para leer e instalar scripts desde un repositorio usando whiptail

# Función para verificar e instalar whiptail si no está disponible
instalar_whiptail() {
    if ! command -v whiptail >/dev/null 2>&1; then
        echo "Instalando whiptail..."
        sudo pacman -Sy --noconfirm newt || { echo "Error: No se pudo instalar whiptail."; exit 1; }
    fi
}

# Función para solicitar la contraseña al inicio con asteriscos
mostrar_contrasena() {
    while true; do
        # Solicitar contraseña con asteriscos
        PASSWORD=$(whiptail --passwordbox "Ingrese su contraseña de sudo:" 10 60 3>&1 1>&2 2>&3)
        if [ $? -ne 0 ]; then
            whiptail --title "Cancelado" --msgbox "Operación cancelada por el usuario." 10 50
            exit 1
        fi
        # Verificar contraseña
        echo "$PASSWORD" | sudo -S echo "" > /dev/null 2>&1
        if [ $? -eq 0 ]; then
            break
        else
            whiptail --title "Error" --msgbox "Contraseña incorrecta. Intente de nuevo." 10 60
        fi
    done
}

# Función para mostrar la bienvenida
mostrar_bienvenida() {
    whiptail --title "Bienvenido a InstallArch" --msgbox "
💻 Bienvenido a InstallArch

Tu gestor para la instalación y configuración de Arch Linux

🌐 https://github.com/mxhectorvega/installarch

🗒️ El log de la instalación se guardará en /tmp/installarch.log
" 15 60
}

# Función para listar y seleccionar scripts del repositorio
listar_scripts() {
    # Obtener la lista de archivos desde el repositorio
    scripts=$(curl -s https://api.github.com/repos/mxhectorvega/installarch/contents | jq -r '.[] | select(.type=="file") | .name')
    if [ $? -ne 0 ]; then
        whiptail --title "Error" --msgbox "No se pudo conectar al repositorio.

Verifica tu conexión a Internet o el estado del repositorio.

🗒️ Log: /tmp/installarch.log" 10 60
        exit 1
    fi

    lista=""
    for script in $scripts; do
        # Verificar si el archivo es ejecutable y comienza con #!/usr/bin/env bash
        content=$(curl -s https://raw.githubusercontent.com/mxhectorvega/installarch/main/$script)
        if echo "$content" | grep -q '^#!/usr/bin/env bash'; then
            lista="$lista $script"
        fi
    done

    if [ -z "$lista" ]; then
        whiptail --title "Error" --msgbox "No se encontraron scripts válidos en el repositorio.

Verifica el contenido del repositorio.

🗒️ Log: /tmp/installarch.log" 10 60
        exit 1
    fi

    seleccion=$(whiptail --title "Seleccione un script para ejecutar" --menu "Elija el script a ejecutar:

🗒️ Log: /tmp/installarch.log" 20 60 15 $lista 3>&1 1>&2 2>&3)
    if [ $? -ne 0 ]; then
        whiptail --title "Cancelado" --msgbox "Operación cancelada por el usuario." 10 50
        exit 1
    fi
    echo "$seleccion" > /tmp/menuopt
}

# Función para ejecutar el script seleccionado y mostrar el progreso
ejecutar_script() {
    script_url="https://raw.githubusercontent.com/mxhectorvega/installarch/main/$seleccion"
    temp_script="/tmp/$(basename "$seleccion")"

    # Descargar el script y verificar errores
    wget -q -O "$temp_script" "$script_url"
    if [ $? -ne 0 ]; then
        whiptail --title "Error" --msgbox "No se pudo descargar el script seleccionado.

Verifica tu conexión a Internet o el estado del repositorio.

🗒️ Log: /tmp/installarch.log" 10 60
        exit 1
    fi

    chmod +x "$temp_script"

    # Contar el número de comandos (pasos) en el script
    total_pasos=$(grep -c '^[^#]' "$temp_script")
    paso_actual=0

    # Crear archivo de registro con permisos adecuados
    echo "$PASSWORD" | sudo -S touch /tmp/installarch.log
    echo "$PASSWORD" | sudo -S chmod 666 /tmp/installarch.log

    (
        while IFS= read -r linea; do
            # Omitir líneas en blanco y comentarios
            if [ -z "$linea" ] || echo "$linea" | grep -q '^#'; then
                continue
            fi

            # Mostrar el comando actual en el log
            echo "\$ $linea" >> /tmp/installarch.log

            # Ejecutar el comando y redirigir la salida al log
            echo "$PASSWORD" | sudo -S sh -c "$linea" >> /tmp/installarch.log 2>&1

            paso_actual=$((paso_actual + 1))
            progreso=$((paso_actual * 100 / total_pasos))
            echo "$progreso"
            sleep 0.5
        done < "$temp_script"
    ) | whiptail --title "Progreso de instalación" --gauge "Instalando $seleccion...

🗒️ Log: /tmp/installarch.log" 10 70 0

    # Mostrar el contenido del archivo de registro
    whiptail --title "Instalación completada" --msgbox "La instalación ha finalizado. Puedes revisar el log en /tmp/installarch.log" 10 60
    whiptail --textbox /tmp/installarch.log 20 70
}

# Función para verificar e instalar dependencias necesarias
instalar_dependencias() {
    echo "$PASSWORD" | sudo -S pacman -Sy --noconfirm
    for cmd in jq wget; do
        if ! command -v "$cmd" >/dev/null 2>&1; then
            echo "$PASSWORD" | sudo -S pacman -S "$cmd" --noconfirm --needed
            if [ $? -ne 0 ]; then
                whiptail --title "Error" --msgbox "No se pudo instalar la dependencia '$cmd'.

Verifica tu conexión a Internet o los permisos de sudo.

🗒️ Log: /tmp/installarch.log" 10 60
                exit 1
            fi
        fi
    done
}

# Flujo principal del script
instalar_whiptail
mostrar_bienvenida
mostrar_contrasena
instalar_dependencias
listar_scripts
seleccion=$(cat /tmp/menuopt)
ejecutar_script
whiptail --title "Finalizado" --msgbox "

❤️ Gracias por usar InstallArch

🌐 https://github.com/mxhectorvega/installarch

🗒️ Log: /tmp/installarch.log" 15 60

# Limpiar archivos temporales si existen
rm -f /tmp/menuopt /tmp/$(basename "$seleccion") 2>/dev/null
