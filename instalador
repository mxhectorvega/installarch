#!/usr/bin/env bash

# Configuración inicial
set -e

# Variables globales
LOG_DIR="$HOME/installarch_logs"
LOG_FILE="$LOG_DIR/installation.log"
REPO_DIR="$HOME/installarch"

# Crear directorio de logs si no existe
mkdir -p "$LOG_DIR"

# Función para mostrar mensajes de error
mostrar_error() {
    whiptail --title "Error" --msgbox "$1" 8 78
}

# Función para pedir contraseña de root
pedir_contraseña() {
    PASSWORD=$(whiptail --passwordbox "Ingresa la contraseña de root:" 8 78 --title "Permisos de administrador" 3>&1 1>&2 2>&3)
    echo "$PASSWORD" | sudo -S echo "" > /dev/null 2>&1
    if [ $? -ne 0 ]; then
        mostrar_error "Contraseña incorrecta. Por favor, inténtalo de nuevo."
        pedir_contraseña
    fi
}

# Función para actualizar repositorio
actualizar_repositorio() {
    if [ -d "$REPO_DIR" ]; then
        cd "$REPO_DIR"
        git pull
    else
        git clone https://github.com/mxhectorvega/installarch "$REPO_DIR"
    fi
}

# Función para obtener lista de scripts
obtener_lista_scripts() {
    find "$REPO_DIR" -type f -exec awk '/^#!\/usr\/bin\/env bash/ { print FILENAME }' {} \; | xargs -n1 basename
}

# Pantalla de bienvenida
pantalla_bienvenida() {
    whiptail --title "Bienvenido" --msgbox "¡Hola! Este script guardará el log en: $LOG_FILE" 10 60
}

# Pantalla de selección de script
seleccionar_script() {
    SCRIPTS=$(obtener_lista_scripts)
    OPTIONS=()
    for script in $SCRIPTS; do
        OPTIONS+=("$script" "")
    done
    SCRIPT_SELECCIONADO=$(whiptail --title "Selecciona un script" --menu "Elige el script a ejecutar:" 20 78 10 "${OPTIONS[@]}" 3>&1 1>&2 2>&3)
    if [ -z "$SCRIPT_SELECCIONADO" ]; then
        mostrar_error "No seleccionaste ningún script."
        seleccionar_script
    fi
}

# Función para ejecutar script seleccionado con salida verbosa
ejecutar_script() {
    OUTPUT_FILE=$(mktemp)
    EXIT_FILE=$(mktemp)

    # Ejecutar el script y capturar salida
    (
        script -qefc "bash '$REPO_DIR/$SCRIPT_SELECCIONADO' 2>&1; echo \$? > '$EXIT_FILE'" "$OUTPUT_FILE"
    ) &
    INSTALL_PID=$!

    # Mostrar salida en tiempo real
    whiptail --title "Progreso de la Instalación" --textbox "$OUTPUT_FILE" 20 80

    # Esperar a que termine la instalación
    wait $INSTALL_PID
    INSTALL_EXIT=$(cat "$EXIT_FILE")

    # Añadir salida al log principal
    cat "$OUTPUT_FILE" >> "$LOG_FILE"

    # Limpiar archivos temporales
    rm -f "$OUTPUT_FILE" "$EXIT_FILE"

    return $INSTALL_EXIT
}

# Pantalla final
pantalla_final() {
    whiptail --title "Instalación Completa" --msgbox "♥️ Suscríbete! 🌐 https://www.youtube.com/mxhectorvega" 10 60
}

# Programa principal
main() {
    pantalla_bienvenida
    actualizar_repositorio
    seleccionar_script
    pedir_contraseña
    ejecutar_script || {
        mostrar_error "La instalación ha fallado. Revisa el log en: $LOG_FILE"
        exit 1
    }
    pantalla_final
}

main
