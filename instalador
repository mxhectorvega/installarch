#!/usr/bin/env bash

# Función para solicitar la contraseña al inicio con puntos por cada carácter
mostrar_contrasena() {
    PASSWORD=$(whiptail --passwordbox "Ingrese su contraseña de sudo:\n\n🗒️ Log: /tmp/installarch.log" 10 60 3>&1 1>&2 2>&3)
    echo "$PASSWORD" | sudo -S echo "Contraseña ingresada correctamente." > /dev/null 2>&1
    if [ $? -ne 0 ]; then
        whiptail --title "Error" --msgbox "Contraseña incorrecta. Intente de nuevo.\n\n🗒️ Log: /tmp/installarch.log" 10 60
        mostrar_contrasena
    fi
}

# Función para mostrar la bienvenida
mostrar_bienvenida() {
    whiptail --title "Bienvenido a InstallArch" --msgbox "\n\n💻 Bienvenido a InstallArch\n\nTu gestor para la instalación y configuración de Arch Linux\n\n🌐 https://www.github.com/mxhectorvega/installarch\n\n🗒️ El log de la instalación se guardará en /tmp/installarch.log\n" 15 60
}

# Función para listar y seleccionar scripts del repositorio
listar_scripts() {
    # Obtener la lista de archivos desde el repositorio y buscar aquellos que comienzan con #!/usr/bin/env bash
    scripts=$(curl -s https://api.github.com/repos/mxhectorvega/installarch/contents | jq -r '.[] | select(.type=="file") | .name')
    lista=()
    for script in $scripts; do
        content=$(curl -s https://raw.githubusercontent.com/mxhectorvega/installarch/main/$script)
        if echo "$content" | grep -q '^#!/usr/bin/env bash'; then
            lista+=("$script" "")
        fi
    done

    if [ ${#lista[@]} -eq 0 ]; then
        whiptail --title "Error" --msgbox "No se encontraron scripts en el repositorio.\n\n🗒️ Log: /tmp/installarch.log" 10 50
        exit 1
    fi

    seleccion=$(whiptail --title "Seleccione un script para ejecutar" --menu "Elige el script a ejecutar:\n\n🗒️ Log: /tmp/installarch.log" 20 60 15 "${lista[@]}" 3>&1 1>&2 2>&3)
    echo "$seleccion" > /tmp/menuopt
}

# Función para ejecutar el script seleccionado y asegurarse de que makepkg se ejecute como usuario
ejecutar_script() {
    script_url="https://raw.githubusercontent.com/mxhectorvega/installarch/main/$seleccion"
    whiptail --title "Instalación de $seleccion" --infobox "Descargando y ejecutando $seleccion...\n\n🗒️ Log: /tmp/installarch.log" 10 70

    # Crear archivo de registro con permisos adecuados
    sudo touch /tmp/installarch.log
    sudo chmod 666 /tmp/installarch.log

    # Descargar el script y guardarlo en un archivo temporal
    temp_script="/tmp/$(basename "$seleccion")"
    wget -q -O "$temp_script" "$script_url"
    chmod +x "$temp_script"

    # Ejecutar el script temporal y asegurar que makepkg se ejecute como usuario
    (
        sudo -u $USER bash "$temp_script" | tee /tmp/installarch.log
    ) | whiptail --title "Progreso de instalación" --gauge "Instalando $seleccion...\n\n🗒️ Log: /tmp/installarch.log" 10 70 0

    # Mostrar el contenido del archivo de registro en tiempo real
    whiptail --title "Progreso de instalación" --textbox /tmp/installarch.log 20 70
}

# Verificar si whiptail, wget y jq están instalados, si no, instalarlos
for cmd in whiptail wget jq; do
    if ! command -v "$cmd" &> /dev/null; then
        echo "$PASSWORD" | sudo -S pacman -S "$cmd" --noconfirm --needed
    fi
done

# Mostrar bienvenida
mostrar_bienvenida

# Pedir contraseña sudo
mostrar_contrasena

# Listar scripts y seleccionar uno
listar_scripts

# Ejecutar el script seleccionado y asegurarse de que makepkg se ejecute como usuario
ejecutar_script

# Mensaje final
whiptail --title "Finalizado" --msgbox "\n\n❤️ Gracias por usar InstallArch\n\n🌐 https://www.github.com/mxhectorvega/installarch\n\n🗒️ Log: /tmp/installarch.log" 15 60

# Limpiar archivos temporales si existen
[ -f /tmp/menuopt ] && rm /tmp/menuopt
