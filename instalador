#!/usr/bin/env bash

# Solicitar la contraseña al inicio con puntos por cada carácter
mostrar_contrasena() {
    PASSWORD=$(zenity --password --title="Contraseña de sudo" --text="Ingrese su contraseña de sudo:\n\n🗒️ Log: /tmp/installarch.log")
}

# Función para mostrar la bienvenida
mostrar_bienvenida() {
    zenity --info --title="Bienvenido a InstallArch" --text="\n\n💻 Bienvenido a InstallArch\n\nTu gestor para la instalación y configuración de Arch Linux\n\n🌐 https://www.github.com/mxhectorvega/installarch\n\n🗒️ El log de la instalación se guardará en /tmp/installarch.log\n" --width=400 --height=200
}

# Función para listar y seleccionar scripts del repositorio
listar_scripts() {
    # Obtener la lista de archivos desde el repositorio y buscar aquellos que comienzan con #!/usr/bin/env bash
    scripts=$(curl -s https://api.github.com/repos/mxhectorvega/installarch/contents | jq -r '.[] | select(.type=="file") | .name')
    lista=()
    for script in $scripts; do
        content=$(curl -s https://raw.githubusercontent.com/mxhectorvega/installarch/main/$script)
        if echo "$content" | grep -q '^#!/usr/bin/env bash'; then
            lista+=("$script")
        fi
    done

    if [ ${#lista[@]} -eq 0 ]; then
        zenity --error --text="No se encontraron scripts en el repositorio.\n\n🗒️ Log: /tmp/installarch.log" --width=300 --height=100
        exit 1
    fi

    seleccion=$(zenity --list --title="Seleccione un script para ejecutar" --text="🗒️ Log: /tmp/installarch.log" --column="Scripts" "${lista[@]}" --width=400 --height=300)
    echo "$seleccion" > /tmp/menuopt
}

# Función para ejecutar el script seleccionado y asegurarse de que makepkg se ejecute como usuario
ejecutar_script() {
    script_url="https://raw.githubusercontent.com/mxhectorvega/installarch/main/$seleccion"
    zenity --info --title="Instalación de $seleccion" --text="Descargando y ejecutando $seleccion...\n\n🗒️ Log: /tmp/installarch.log" --width=300 --height=100

    # Crear archivo de registro con permisos adecuados
    sudo touch /tmp/installarch.log
    sudo chmod 666 /tmp/installarch.log

    # Descargar el script y ejecutarlo con makepkg como usuario
    script_content=$(curl -s "$script_url")

    # Crear un script temporal para ejecutarlo
    temp_script="/tmp/$(basename "$seleccion")"
    echo "$script_content" > "$temp_script"
    chmod +x "$temp_script"

    # Ejecutar el script temporal y asegurar que makepkg se ejecute como usuario
    (
        wget -q -O - "$script_url" | sudo -u $USER bash | tee /tmp/installarch.log
    ) | zenity --progress --title="Progreso de instalación" --text="Instalando $seleccion...\n\n🗒️ Log: /tmp/installarch.log" --percentage=0 --width=400 --height=100 --auto-close

    # Mostrar el contenido del archivo de registro en tiempo real
    zenity --text-info --title="Progreso de instalación" --filename="/tmp/installarch.log" --width=600 --height=400 --text="🗒️ Log: /tmp/installarch.log"
}

# Verificar si zenity, wget y jq están instalados, si no, instalarlos
for cmd in zenity wget jq; do
    if ! command -v "$cmd" &> /dev/null; then
        sudo -S pacman -S "$cmd" --noconfirm --needed
    fi
done

# Mostrar bienvenida
mostrar_bienvenida

# Pedir contraseña sudo
mostrar_contrasena

# Listar scripts y seleccionar uno
listar_scripts

# Ejecutar el script seleccionado y asegurarse de que makepkg se ejecute como usuario
ejecutar_script

# Mensaje final
zenity --info --title="Finalizado" --text="\n\n❤️ Gracias por usar InstallArch\n\n🌐 https://www.github.com/mxhectorvega/installarch\n\n🗒️ Log: /tmp/installarch.log" --width=400 --height=200

# Limpiar archivos temporales si existen
[ -f /tmp/menuopt ] && rm /tmp/menuopt
