#!/usr/bin/env bash

# Verificar que el script se ejecuta como root
if [ "$(id -u)" -ne 0 ]; then
    echo "Por favor, ejecuta este script como root."
    exit 1
fi

echo "Actualizando repositorios e instalando paquetes necesarios..."
pacman -Syu --needed qemu-base libvirt virt-viewer dnsmasq vde2 bridge-utils openbsd-netcat ebtables iptables edk2-ovmf usbredir spice-vdagent xf86-video-qxl mesa libdrm

echo "Configurando y habilitando servicios de libvirt..."
systemctl enable --now libvirtd.service || {
    echo "Error al habilitar libvirt. Verifica el servicio manualmente."
    exit 1
}

echo "Configurando acceso sin contraseñas para libvirt..."
mkdir -p /etc/libvirt/qemu/networks
cat <<EOF > /etc/libvirt/libvirtd.conf
unix_sock_group = "libvirt"
unix_sock_rw_perms = "0770"
EOF
systemctl restart libvirtd.service

echo "Configurando red NAT en el rango 192.168.3.0..."
mkdir -p /etc/libvirt/qemu/networks
cat <<EOF > /etc/libvirt/qemu/networks/default.xml
<network>
  <name>default</name>
  <uuid>$(uuidgen)</uuid>
  <forward mode='nat'/>
  <bridge name='virbr0' stp='on' delay='0'/>
  <ip address='192.168.3.1' netmask='255.255.255.0'>
    <dhcp>
      <range start='192.168.3.100' end='192.168.3.200'/>
    </dhcp>
  </ip>
</network>
EOF

echo "Aplicando configuración de red virtual 'default'..."
# Verificar redes existentes
sudo virsh net-list --all

# Definir red virtual desde el archivo de configuración
if sudo virsh net-define /etc/libvirt/qemu/networks/default.xml; then
    echo "Red 'default' definida correctamente."
else
    echo "Error al definir la red 'default'. Verifica el archivo default.xml."
    exit 1
fi

# Hacer que la red inicie automáticamente
sudo virsh net-autostart default

# Activar la red
if sudo virsh net-start default; then
    echo "Red 'default' activada correctamente."
else
    echo "Error al activar la red. Revisa manualmente."
    exit 1
fi

sudo usermod -aG libvirt,kvm,qemu $USER

sudo systemctl restart libvirtd

echo "Script finalizado. Reinicia la sesión para aplicar los cambios."
