#!/usr/bin/env bash

# Strict mode
set -euo pipefail

# Colors
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
CYAN='\033[0;36m'
RED='\033[0;31m'
PURPLE='\033[0;35m'
NC='\033[0m'

# Variables
LOG_FILE="$HOME/arch_install.log"
INSTALLED_PACKAGES=()
TEMP_DIR="/tmp/arch_installer_$$"

# Crear directorio temporal
mkdir -p "$TEMP_DIR"

# Funci√≥n de limpieza
cleanup() {
    local status=$?
    if [ $status -ne 0 ]; then
        echo -e "\n${RED}Error detectado. Iniciando sistema de retroceso...${NC}"
        for pkg in "${INSTALLED_PACKAGES[@]}"; do
            echo -e "${YELLOW}Desinstalando: $pkg${NC}"
            sudo pacman -R --noconfirm "$pkg" 2>/dev/null || true
        done
        echo -e "${GREEN}Sistema restaurado${NC}"
    fi
    rm -rf "$TEMP_DIR"
}

trap cleanup EXIT SIGINT SIGTERM

# Verificar dependencias
check_dependencies() {
    local dependencies=("curl" "sudo")
    for dep in "${dependencies[@]}"; do
        if ! command -v "$dep" &> /dev/null; then
            echo -e "${RED}Error: $dep no est√° instalado.${NC}"
            echo -e "${YELLOW}Instalando $dep...${NC}"
            pacman -Sy --noconfirm "$dep" || {
                echo -e "${RED}No se pudo instalar $dep. Abortando...${NC}"
                exit 1
            }
        fi
    done
}

# Verificar conexi√≥n a Internet
check_internet() {
    if ! ping -c 1 google.com &> /dev/null; then
        echo -e "${RED}Error: No hay conexi√≥n a Internet.${NC}"
        exit 1
    fi
}

# Funci√≥n de bienvenida
show_welcome() {
    clear
    echo -e "${GREEN}‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ${NC}"
    echo -e "${GREEN}‚îÇ     Bienvenido al instalador de          ‚îÇ${NC}"
    echo -e "${GREEN}‚îÇ        scripts de mxhectorvega           ‚îÇ${NC}"
    echo -e "${GREEN}‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ${NC}"
    echo -e "\nArchivo de registros: ${BLUE}$LOG_FILE${NC}\n"
    sleep 1
}

# Funci√≥n del men√∫
show_menu() {
    echo -e "${YELLOW}Lista de Scripts Disponibles:${NC}\n"

    echo -e "${CYAN}1)${NC} Optimizaciones para Pacman, Repo Chaotic y Paru - AUR Helper"
    echo -e "   - Configura repositorios adicionales y herramientas para AUR."
    echo -e "${CYAN}2)${NC} Software flatpak para el usuario dom√©stico"
    echo -e "   - Instala y configura Flatpak para aplicaciones de usuario."
    echo -e "${CYAN}3)${NC} Entorno de escritorio Gnome 47.x"
    echo -e "   - Instala y configura el entorno de escritorio Gnome."
    echo -e "${CYAN}4)${NC} Controladores Wifi para MacBook Pro y Air"
    echo -e "   - Instala controladores para dispositivos WiFi en MacBooks."
    echo -e "${CYAN}5)${NC} Controladores para impresora Epson L3210"
    echo -e "   - Configura controladores para impresoras Epson."
    echo -e "${CYAN}6)${NC} Configuraciones para Hyprland"
    echo -e "   - Instala y configura el compositor Hyprland."
    echo -e "${CYAN}0)${NC} Salir\n"
}

# Funci√≥n para registrar paquetes instalados
register_package() {
    if [[ ! " ${INSTALLED_PACKAGES[@]} " =~ " $1 " ]]; then
        INSTALLED_PACKAGES+=("$1")
    fi
}

# Funci√≥n para ejecutar el script seleccionado
execute_script() {
    local url="$1"
    local temp_script="$TEMP_DIR/script.sh"

    echo -e "\n${YELLOW}Descargando script...${NC}"
    if ! curl -s "$url" > "$temp_script"; then
        echo -e "${RED}Error al descargar el script${NC}"
        return 1
    fi

    chmod +x "$temp_script"
    echo -e "${GREEN}Script descargado correctamente${NC}"
    echo -e "\n${YELLOW}Ejecutando script...${NC}\n"

    # Ejecutar script y capturar su salida en el log
    if ! bash "$temp_script" 2>&1 | tee -a "$LOG_FILE"; then
        echo -e "${RED}Error durante la ejecuci√≥n del script${NC}"
        return 1
    fi

    return 0
}

# Funci√≥n de pantalla final
show_final_screen() {
    local status=$1

    clear
    if [ "$status" -eq 0 ]; then
        echo -e "${GREEN}‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ${NC}"
        echo -e "${GREEN}‚îÇ      ¬°Instalaci√≥n completada con √©xito!  ‚îÇ${NC}"
        echo -e "${GREEN}‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ${NC}"
    else
        echo -e "${RED}‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ${NC}"
        echo -e "${RED}‚îÇ   ¬°Error durante la instalaci√≥n!         ‚îÇ${NC}"
        echo -e "${RED}‚îÇ   Revise el archivo de registros         ‚îÇ${NC}"
        echo -e "${RED}‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ${NC}"
    fi

    echo -e "\n${PURPLE}‚ô•Ô∏è Suscr√≠bete!${NC}"
    echo -e "${PURPLE}üåê https://www.youtube.com/mxhectorvega${NC}\n"

    if [ "$status" -ne 0 ]; then
        echo -e "${YELLOW}Presione cualquier tecla para ver el log de errores...${NC}"
        read -n 1
        less -R "$LOG_FILE"
    fi

    echo -e "\n${YELLOW}Presione cualquier tecla para volver al men√∫...${NC}"
    read -n 1
}

# URLs de los scripts (ocultas del men√∫)
declare -A SCRIPT_URLS=(
    [1]="https://raw.githubusercontent.com/mxhectorvega/installarch/main/repos"
    [2]="https://raw.githubusercontent.com/mxhectorvega/installarch/main/flatpak"
    [3]="https://raw.githubusercontent.com/mxhectorvega/installarch/main/gnome"
    [4]="https://raw.githubusercontent.com/mxhectorvega/installarch/main/macbook"
    [5]="https://raw.githubusercontent.com/mxhectorvega/installarch/main/impresora"
    [6]="https://raw.githubusercontent.com/mxhectorvega/installarch/main/hyprland"
)

# Funci√≥n principal
main() {
    check_dependencies
    check_internet

    # Inicializar archivo de log
    : > "$LOG_FILE"

    while true; do
        # Mostrar bienvenida y men√∫
        show_welcome
        show_menu

        # Leer selecci√≥n
        read -rp $'\033[1;33mSeleccione una opci√≥n (0-6): \033[0m' selection

        case $selection in
            0)
                echo -e "\n${YELLOW}Saliendo del instalador...${NC}"
                exit 0
                ;;
            [1-6])
                if execute_script "${SCRIPT_URLS[$selection]}"; then
                    show_final_screen 0
                else
                    show_final_screen 1
                fi
                ;;
            *)
                echo -e "\n${RED}Opci√≥n inv√°lida. Por favor, seleccione un n√∫mero del 0 al 6.${NC}"
                sleep 2
                continue
                ;;
        esac
    done
}

# Ejecutar el script
main "$@"
