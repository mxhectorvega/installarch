#!/bin/sh

# Variables
LOG_FILE="/var/log/install_mxhectorvega.log"
REPO_URL="https://github.com/mxhectorvega/installarch"
SCRIPTS_DIR="/tmp/installarch"
DEPENDENCIES="whiptail git"
USER=$(logname)
ROOT_PASS=""
SCRIPT_URLS="https://raw.githubusercontent.com/mxhectorvega/installarch/main/flatpak https://raw.githubusercontent.com/mxhectorvega/installarch/main/gnome https://raw.githubusercontent.com/mxhectorvega/installarch/main/repos https://raw.githubusercontent.com/mxhectorvega/installarch/main/impresora https://raw.githubusercontent.com/mxhectorvega/installarch/main/mackbook"

# Funciones de ayuda
log() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') - $1" >> "$LOG_FILE"
}

check_root() {
    if [ "$(id -u)" -ne 0 ]; then
        echo "Este script debe ejecutarse como root" >&2
        exit 1
    fi
}

install_dependencies() {
    for dep in $DEPENDENCIES; do
        if ! command -v "$dep" >/dev/null 2>&1; then
            pacman -S --noconfirm "$dep" || { log "Error instalando $dep"; exit 1; }
        fi
    done
}

validate_compatibility() {
    for url in $SCRIPT_URLS; do
        if ! curl -sSf "$url" >/dev/null; then
            log "Error: No se pudo validar la compatibilidad con $url"
            whiptail --title "Error de compatibilidad" --msgbox "No se pudo validar la compatibilidad con $url" 8 60
            exit 1
        fi
    done
}

save_root_password() {
    ROOT_PASS=$(whiptail --passwordbox "Introduce la contraseña de root:" 8 60 3>&1 1>&2 2>&3)
    if [ -z "$ROOT_PASS" ]; then
        whiptail --title "Error" --msgbox "No se ingresó la contraseña de root." 8 60
        exit 1
    fi
}

clone_repository() {
    su - "$USER" -c "git clone $REPO_URL $SCRIPTS_DIR" || { log "Error clonando repositorio"; exit 1; }
}

list_scripts() {
    SCRIPTS=$(find "$SCRIPTS_DIR" -maxdepth 1 -type f -executable ! -name '*.*' -printf "%f\n" | sort)
    SCRIPT_MENU=""
    i=1
    for script in $SCRIPTS; do
        SCRIPT_MENU="$SCRIPT_MENU $i \"$script\""
        i=$((i+1))
    done
}

install_script() {
    script_name=$1
    script_path="$SCRIPTS_DIR/$script_name"
    if [ ! -f "$script_path" ]; then
        whiptail --title "Error" --msgbox "No se pudo encontrar el script $script_name." 8 60
        exit 1
    fi

    total_steps=$(grep -c '^' "$script_path")
    current_step=0

    (
    while IFS= read -r line; do
        current_step=$((current_step + 1))
        progress=$((current_step * 100 / total_steps))
        echo "$progress"
        echo "# Ejecutando: $line"

        if echo "$line" | grep -q "makepkg" && [ "$(id -u)" -eq 0 ]; then
            su - "$USER" -c "$line" || { log "Error ejecutando $line"; rollback; exit 1; }
        else
            sh -c "$line" || { log "Error ejecutando $line"; rollback; exit 1; }
        fi
    done < "$script_path"
    ) | whiptail --gauge "Instalando $script_name..." 6 60 0
}

rollback() {
    log "Iniciando rollback de la instalación fallida"
    # Aquí se pueden agregar acciones para revertir cambios
}

cleanup() {
    rm -rf "$SCRIPTS_DIR"
    log "Limpieza completada"
}

# Inicio del script
check_root
install_dependencies

# Pantalla de Bienvenida
if ! whiptail --title "Instalador de scripts de mxhectorvega" --yesno "Bienvenido al instalador de scripts de mxhectorvega.\nLos registros se almacenarán en $LOG_FILE" 10 60; then
    exit 0
fi

save_root_password
log "Contraseña de root almacenada para uso futuro"

validate_compatibility

clone_repository

list_scripts

# Pantalla de Lista de scripts
SCRIPT_NUMBER=$(eval "whiptail --title \"Lista de scripts\" --menu \"Selecciona un script para ejecutar:\" 20 60 10 $SCRIPT_MENU 3>&1 1>&2 2>&3")

if [ $? -ne 0 ]; then
    whiptail --title "Instalación cancelada" --msgbox "Instalación cancelada" 8 60
    exit 0
fi

selected_script=""
i=1
for script in $SCRIPTS; do
    if [ "$i" -eq "$SCRIPT_NUMBER" ]; then
        selected_script="$script"
        break
    fi
    i=$((i+1))
done

if [ -z "$selected_script" ]; then
    whiptail --title "Error" --msgbox "No se pudo encontrar el script seleccionado." 8 60
    exit 1
fi

# Pantalla de Instalación
install_script "$selected_script"

# Pantalla final
ACTION=$(whiptail --title "Instalación completada" --menu "♥️ Suscríbete! 🌐 https://www.youtube.com/mxhectorvega\n\nElige una opción:" 12 60 2 \
"1" "Mostrar registro de instalación" \
"2" "Finalizar" 3>&1 1>&2 2>&3)

case "$ACTION" in
    1)
        whiptail --title "Registro de instalación" --textbox "$LOG_FILE" 20 60
        ;;
    2)
        ;;
    *)
        ;;
esac

cleanup
log "Instalación finalizada"

exit 0
