#!/bin/sh

# Configuración inicial
: "${LOG_FILE:=${HOME}/installarch.log}"
REPO_URL="https://github.com/mxhectorvega/installarch"
REPO_DIR="installarch"
TMP_DIR="/tmp/installarch_temp"
cleanup_list=""

# Limpieza final
cleanup() {
    rm -rf "${TMP_DIR}"
    [ -n "$cleanup_list" ] && rm -rf $cleanup_list
}

# Manejo de errores
error() {
    cleanup
    whiptail --title "Error" --msgbox "ERROR: $1" 10 60
    exit 1
}

# Validar dependencias
check_deps() {
    required="git whiptail find awk grep sudo"
    missing=""
    for cmd in $required; do
        if ! command -v "$cmd" >/dev/null 2>&1; then
            missing="$missing $cmd"
        fi
    done
    [ -n "$missing" ] && error "Dependencias faltantes: $missing"
}

# Pantalla de bienvenida
welcome() {
    whiptail --title "Bienvenida" --yesno "Bienvenido al instalador de scripts de mxhectorvega\n\nLog: ${LOG_FILE}" \
    12 60 --yes-button "Iniciar" --no-button "Cancelar" || exit 0
}

# Clonar repositorio
clone_repo() {
    [ -d "${REPO_DIR}" ] && rm -rf "${REPO_DIR}"
    if ! git clone "${REPO_URL}" "${REPO_DIR}" >"${LOG_FILE}" 2>&1; then
        error "No se pudo clonar el repositorio"
    fi
}

# Listar scripts disponibles
list_scripts() {
    find "${REPO_DIR}" -type f -executable ! -name "*.*" | awk -F/ '{print ++i " " $NF}'
}

# Ejecutar script con manejo de privilegios
run_script() {
    script="$1"
    progress=0
    total_steps=$(grep -c '^#' "$script" | tr -d '\n')

    {
        while read -r line; do
            case "$line" in
                *makepkg*|*git*)
                    if [ "$(id -u)" -eq 0 ]; then
                        sudo -u "${SUDO_USER}" "$line"
                    else
                        eval "$line"
                    fi
                    ;;
                *)
                    eval "$line"
                    ;;
            esac
            progress=$((progress + 1))
            printf "%d\n" "$((progress * 100 / total_steps))"
        done < "$script"
    } | whiptail --title "Instalando" --gauge "Progreso de instalación:" 10 60 0
}

# Pantalla de lista de scripts
select_script() {
    while true; do
        script_list=$(list_scripts)
        selection=$(whiptail --title "Scripts Disponibles" \
        --menu "Seleccione un script:" 20 60 10 \
        $script_list \
        3>&1 1>&2 2>&3) || return 1

        selected_script=$(find "${REPO_DIR}" -type f -executable ! -name "*.*" | sed -n "${selection}p")

        if [ -f "$selected_script" ]; then
            run_script "$selected_script"
            return 0
        else
            error "Script no válido"
        fi
    done
}

# Pantalla final
final_screen() {
    whiptail --title "Completado" \
    --yesno "♥️ Suscríbete! 🌐 https://www.youtube.com/mxhectorvega\n\n¿Mostrar registro?" \
    12 60 --yes-button "Finalizar" --no-button "Mostrar .log" && cleanup

    [ $? -eq 1 ] && whiptail --textbox "${LOG_FILE}" 20 60
}

# Función principal
main() {
    check_deps
    welcome
    clone_repo

    while select_script; do
        final_screen
        break
    done
}

# Inicio del programa
main
