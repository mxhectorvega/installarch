#!/bin/sh

# Variables globales
LOG_FILE="$HOME/installarch.log"
REPO_URL="https://github.com/mxhectorvega/installarch"
CLONE_DIR="/tmp/installarch"
ROOT_PASSWORD=""

# Función para mostrar mensajes de error y salir
error_exit() {
    echo "Error: $1" >> "$LOG_FILE"
    whiptail --title "Error" --msgbox "$1" 8 50
    exit 1
}

# Función para verificar dependencias
check_dependencies() {
    local dependencies="whiptail git sudo"
    for dep in $dependencies; do
        if ! command -v "$dep" > /dev/null 2>&1; then
            error_exit "Falta la dependencia: $dep"
        fi
    done
}

# Función para clonar el repositorio
clone_repository() {
    if ! git clone "$REPO_URL" "$CLONE_DIR" >> "$LOG_FILE" 2>&1; then
        error_exit "No se pudo clonar el repositorio."
    fi
}

# Función para mostrar la pantalla de bienvenida
welcome_screen() {
    whiptail --title "Bienvenido" --yesno "Bienvenido al instalador de scripts de mxhectorvega.\n\nEl archivo de registros se almacenará en: $LOG_FILE.\n\n¿Desea continuar?" 12 50
    if [ $? -ne 0 ]; then
        exit 0
    fi
}

# Función para mostrar la lista de scripts
list_scripts() {
    local scripts
    scripts=$(find "$CLONE_DIR" -type f -executable ! -name "*.*" | awk -F/ '{print NR, $NF}')
    local selected_script
    selected_script=$(whiptail --title "Lista de Scripts" --menu "Seleccione un script para ejecutar:" 20 50 10 $scripts 3>&1 1>&2 2>&3)
    if [ $? -ne 0 ]; then
        return 1
    fi
    echo "$selected_script"
}

# Función para ejecutar el script seleccionado
execute_script() {
    local script_name=$1
    local script_path
    script_path=$(find "$CLONE_DIR" -type f -executable ! -name "*.*" | sed -n "${script_name}p")

    if [ -z "$script_path" ]; then
        error_exit "No se pudo encontrar el script seleccionado."
    fi

    # Ejecutar el script y mostrar la barra de progreso
    {
        echo "0"
        # Aquí deberías agregar los pasos del script y actualizar la barra de progreso
        # Por ejemplo, si el script tiene 5 pasos, puedes dividir el progreso en 20% por paso.
        # Esto es solo un ejemplo, debes adaptarlo a tu script real.
        sleep 1; echo "20"
        sleep 1; echo "40"
        sleep 1; echo "60"
        sleep 1; echo "80"
        sleep 1; echo "100"
    } | whiptail --gauge "Instalando $script_name..." 6 50 0

    if [ $? -ne 0 ]; then
        error_exit "La instalación del script falló."
    fi
}

# Función para mostrar la pantalla final
final_screen() {
    whiptail --title "Finalizado" --msgbox "♥️ Suscríbete! 🌐 https://www.youtube.com/mxhectorvega" 10 50
    if whiptail --title "Registro" --yesno "¿Desea ver el archivo de registros?" 10 50; then
        whiptail --textbox "$LOG_FILE" 20 80 --scrolltext
    fi
}

# Función principal
main() {
    check_dependencies
    clone_repository
    welcome_screen
    while true; do
        selected_script=$(list_scripts)
        if [ $? -ne 0 ]; then
            break
        fi
        execute_script "$selected_script"
    done
    final_screen
    # Limpieza de residuos
    rm -rf "$CLONE_DIR"
}

# Ejecutar el script principal
main
