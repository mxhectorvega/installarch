#!/bin/sh

# Variables globales
REPO_URL="https://github.com/mxhectorvega/installarch"
REPO_DIR="$HOME/installarch"
LOG_FILE="$HOME/installarch.log"
TEMP_DIR="/tmp/installarch_temp"
ROOT_PASS=""
USER_PASS=""

# Colores y estilo de texto
BOLD=$(tput bold)
NORMAL=$(tput sgr0)
RED=$(tput setaf 1)
GREEN=$(tput setaf 2)
YELLOW=$(tput setaf 3)
BLUE=$(tput setaf 4)
MAGENTA=$(tput setaf 5)
CYAN=$(tput setaf 6)
WHITE=$(tput setaf 7)

# Función para mostrar mensajes de error
error() {
    echo "${RED}${BOLD}Error: $1${NORMAL}" >&2
    echo "Error: $1" >> "$LOG_FILE"
    exit 1
}

# Función para limpiar archivos temporales
cleanup() {
    rm -rf "$TEMP_DIR"
}

# Función para clonar el repositorio
clone_repo() {
    if [ -d "$REPO_DIR" ]; then
        echo "${YELLOW}Eliminando repositorio existente...${NORMAL}"
        rm -rf "$REPO_DIR" || error "No se pudo eliminar el repositorio existente."
    fi

    echo "${CYAN}Clonando repositorio...${NORMAL}"
    git clone "$REPO_URL" "$REPO_DIR" || error "No se pudo clonar el repositorio."
}

# Función para validar dependencias
validate_dependencies() {
    local dependencies="git makepkg"
    for dep in $dependencies; do
        if ! command -v "$dep" > /dev/null 2>&1; then
            error "La dependencia '$dep' no está instalada."
        fi
    done
}

# Función para mostrar la pantalla de bienvenida
welcome_screen() {
    clear
    echo "${GREEN}${BOLD}Bienvenido al instalador de scripts de mxhectorvega${NORMAL}"
    echo "${BLUE}El archivo de registros se almacenará en: $LOG_FILE${NORMAL}"
    echo "${WHITE}1. Iniciar${NORMAL}"
    echo "${WHITE}2. Cancelar${NORMAL}"
    read -p "Seleccione una opción: " choice

    case $choice in
        1)
            clone_repo
            validate_dependencies
            list_scripts
            ;;
        2)
            echo "${RED}Instalación cancelada.${NORMAL}"
            exit 0
            ;;
        *)
            error "Opción no válida."
            ;;
    esac
}

# Función para mostrar la lista de scripts
list_scripts() {
    clear
    echo "${GREEN}${BOLD}Lista de scripts disponibles:${NORMAL}"
    local scripts=$(find "$REPO_DIR" -maxdepth 1 -type f -executable ! -name ".*" | sort)
    local count=0

    for script in $scripts; do
        count=$((count + 1))
        printf "${WHITE}%2d. %s${NORMAL}\n" "$count" "$(basename "$script")"
    done

    echo "${WHITE}S. Siguiente${NORMAL}"
    echo "${WHITE}A. Atrás${NORMAL}"
    echo "${WHITE}C. Cancelar${NORMAL}"
    read -p "Seleccione una opción: " choice

    case $choice in
        [1-9]|10)
            if [ "$choice" -le "$count" ]; then
                local selected_script=$(echo "$scripts" | sed -n "${choice}p")
                install_script "$selected_script"
            else
                error "Opción no válida."
            fi
            ;;
        S|s)
            list_scripts
            ;;
        A|a)
            welcome_screen
            ;;
        C|c)
            echo "${RED}Instalación cancelada.${NORMAL}"
            exit 0
            ;;
        *)
            error "Opción no válida."
            ;;
    esac
}

# Función para instalar el script seleccionado
install_script() {
    local script="$1"
    clear
    echo "${GREEN}${BOLD}Instalando $(basename "$script")...${NORMAL}"

    # Ejecutar el script y capturar la salida
    "$script" >> "$LOG_FILE" 2>&1 &
    local pid=$!

    # Mostrar barra de progreso
    while kill -0 "$pid" 2>/dev/null; do
        printf "${BLUE}${BOLD}Progreso: [%-50s]${NORMAL}\r" "$(printf "%0.s#" {1..50})"
        sleep 1
    done

    # Verificar si la instalación fue exitosa
    if wait "$pid"; then
        echo "${GREEN}${BOLD}Instalación exitosa.${NORMAL}"
    else
        echo "${RED}${BOLD}Instalación fallida. Revise el archivo de registros: $LOG_FILE${NORMAL}"
    fi

    final_screen
}

# Función para mostrar la pantalla final
final_screen() {
    clear
    echo "${GREEN}${BOLD}La instalación ha finalizado.${NORMAL}"
    echo "${BLUE}♥️ Suscríbete! 🌐 https://www.youtube.com/mxhectorvega${NORMAL}"
    echo "${WHITE}1. Finalizar${NORMAL}"
    echo "${WHITE}2. Mostrar archivo de registros${NORMAL}"
    read -p "Seleccione una opción: " choice

    case $choice in
        1)
            cleanup
            echo "${GREEN}${BOLD}Gracias por usar el instalador.${NORMAL}"
            exit 0
            ;;
        2)
            less "$LOG_FILE"
            final_screen
            ;;
        *)
            error "Opción no válida."
            ;;
    esac
}

# Iniciar el instalador
welcome_screen
# 13:20
