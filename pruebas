#!/bin/sh

# Variables
LOG_FILE="/var/log/installarch.log"
REPO_URL="https://github.com/mxhectorvega/installarch"
REPO_DIR="/tmp/installarch"
SCRIPTS_DIR="$REPO_DIR"
SELECTED_SCRIPT=""
ROOT_PASSWORD=""

# Función para limpiar residuos
cleanup() {
    rm -rf "$REPO_DIR"
    rm -f /tmp/installarch.log
}

# Función para manejar errores
handle_error() {
    echo "Error: $1" >> "$LOG_FILE"
    whiptail --title "Error" --msgbox "Ocurrió un error: $1" 8 78
    cleanup
    exit 1
}

# Función para verificar dependencias
check_dependencies() {
    for dep in whiptail git find awk grep; do
        if ! command -v "$dep" > /dev/null 2>&1; then
            handle_error "La dependencia '$dep' no está instalada."
        fi
    done
}

# Función para clonar el repositorio
clone_repo() {
    if ! git clone "$REPO_URL" "$REPO_DIR" >> "$LOG_FILE" 2>&1; then
        handle_error "No se pudo clonar el repositorio."
    fi
}

# Función para mostrar la pantalla de bienvenida
welcome_screen() {
    whiptail --title "Bienvenido" --msgbox "Bienvenido al instalador de scripts de mxhectorvega.\n\nEl archivo de registros se almacenará en: $LOG_FILE" 10 78
    if ! whiptail --title "Dependencias" --yesno "¿Desea instalar las dependencias necesarias?" 8 78; then
        handle_error "Se requieren dependencias para continuar."
    fi
    check_dependencies
}

# Función para mostrar la lista de scripts
list_scripts() {
    clone_repo
    SCRIPTS=$(find "$SCRIPTS_DIR" -type f -executable ! -name "*.*" | awk -F/ '{print NR, $NF}')
    SELECTED_SCRIPT=$(whiptail --title "Lista de Scripts" --menu "Seleccione un script para ejecutar:" 20 78 10 $SCRIPTS 3>&1 1>&2 2>&3)
    if [ $? -ne 0 ]; then
        handle_error "No se seleccionó ningún script."
    fi
}

# Función para ejecutar el script seleccionado
run_script() {
    SCRIPT_PATH="$SCRIPTS_DIR/$(find "$SCRIPTS_DIR" -type f -executable ! -name "*.*" | sed -n "${SELECTED_SCRIPT}p")"
    if [ -z "$SCRIPT_PATH" ]; then
        handle_error "No se pudo encontrar el script seleccionado."
    fi

    # Solicitar contraseña root si es necesario
    if grep -q "sudo" "$SCRIPT_PATH"; then
        ROOT_PASSWORD=$(whiptail --title "Contraseña Root" --passwordbox "Ingrese la contraseña de root:" 8 78 3>&1 1>&2 2>&3)
        if [ -z "$ROOT_PASSWORD" ]; then
            handle_error "Se requiere la contraseña de root para continuar."
        fi
    fi

    # Ejecutar el script con barra de progreso
    {
        echo "Ejecutando script: $SCRIPT_PATH" >> "$LOG_FILE"
        if echo "$ROOT_PASSWORD" | sudo -S bash "$SCRIPT_PATH" >> "$LOG_FILE" 2>&1; then
            echo "Script ejecutado con éxito." >> "$LOG_FILE"
        else
            handle_error "El script falló durante la ejecución."
        fi
    } | whiptail --title "Instalación" --gauge "Instalando..." 6 60 0
}

# Función para mostrar la pantalla final
final_screen() {
    if whiptail --title "Finalizado" --yesno "♥️ Suscríbete! 🌐 https://www.youtube.com/mxhectorvega\n\n¿Desea ver el archivo de registros?" 10 78; then
        whiptail --title "Archivo de Registros" --textbox "$LOG_FILE" 20 78 --scrolltext
    fi
    cleanup
}

# Main
welcome_screen
list_scripts
run_script
final_screen
