#!/bin/sh

# Variables globales
LOG_FILE="$HOME/installarch.log"
REPO_URL="https://github.com/mxhectorvega/installarch"
REPO_DIR="$HOME/installarch"
ROOT_PASS=""
USER_PASS=""
CURRENT_USER=$(whoami)

# Limpiar residuos previos
cleanup() {
    rm -rf "$REPO_DIR"
    rm -f "$LOG_FILE"
}

# Crear archivo de registro
create_log() {
    echo "=== Registro de instalación ===" > "$LOG_FILE"
    echo "Fecha: $(date)" >> "$LOG_FILE"
    echo "Usuario: $CURRENT_USER" >> "$LOG_FILE"
    echo "===============================" >> "$LOG_FILE"
}

# Validar dependencias
check_dependencies() {
    local missing_deps=0
    for cmd in git makepkg whiptail; do
        if ! command -v "$cmd" >/dev/null 2>&1; then
            echo "Error: El comando '$cmd' no está instalado." | tee -a "$LOG_FILE"
            missing_deps=1
        fi
    done
    if [ "$missing_deps" -eq 1 ]; then
        whiptail --title "Error" --msgbox "Faltan dependencias necesarias. Por favor, instálelas e inténtelo de nuevo." 10 60
        exit 1
    fi
}

# Clonar repositorio
clone_repo() {
    if [ -d "$REPO_DIR" ]; then
        rm -rf "$REPO_DIR"
    fi
    echo "Clonando repositorio..." | tee -a "$LOG_FILE"
    if ! git clone "$REPO_URL" "$REPO_DIR" >> "$LOG_FILE" 2>&1; then
        whiptail --title "Error" --msgbox "No se pudo clonar el repositorio. Verifique su conexión a Internet." 10 60
        exit 1
    fi
}

# Pantalla de Bienvenida
welcome_screen() {
    whiptail --title "Bienvenido" --yesno "Bienvenido al instalador de scripts de mxhectorvega.\n\nEl archivo de registros se almacenará en:\n$LOG_FILE\n\n¿Desea iniciar la instalación?" 15 60
    if [ $? -ne 0 ]; then
        exit 0
    fi
}

# Pantalla de Lista de Scripts
list_scripts() {
    cd "$REPO_DIR" || exit 1
    scripts=$(find . -maxdepth 1 -type f -executable -not -name "*.*" | awk '{print NR, $0}' | column -t)
    if [ -z "$scripts" ]; then
        whiptail --title "Error" --msgbox "No se encontraron scripts ejecutables en el repositorio." 10 60
        exit 1
    fi

    choice=$(whiptail --title "Lista de Scripts" --menu "Seleccione un script para ejecutar:" 20 60 10 $scripts 3>&1 1>&2 2>&3)
    if [ $? -ne 0 ]; then
        return 1
    fi

    selected_script=$(echo "$scripts" | awk -v num="$choice" '$1 == num {print $2}')
    echo "Script seleccionado: $selected_script" | tee -a "$LOG_FILE"
    export SELECTED_SCRIPT="$selected_script"
}

# Pantalla de Instalación
install_script() {
    script_path="$REPO_DIR/$SELECTED_SCRIPT"
    total_steps=$(grep -c '^#' "$script_path") # Contar pasos basados en comentarios (simplificado)
    progress=0

    (
        while IFS= read -r line; do
            echo "$line" >> "$LOG_FILE"
            progress=$((progress + 1))
            percentage=$((progress * 100 / total_steps))
            echo "$percentage"
        done < "$script_path"
    ) | whiptail --gauge "Instalando $SELECTED_SCRIPT..." 10 60 0

    if [ $? -ne 0 ]; then
        whiptail --title "Error" --msgbox "La instalación falló. Consulte el archivo de registros para más detalles." 10 60
        return 1
    fi
}

# Pantalla Final
final_screen() {
    whiptail --title "Instalación Completada" --yesno "♥️ Suscríbete! 🌐 https://www.youtube.com/mxhectorvega\n\n¿Desea ver el archivo de registros?" 15 60
    if [ $? -eq 0 ]; then
        whiptail --title "Registro de Instalación" --scrolltext --msgbox "$(cat "$LOG_FILE")" 20 70
    fi
}

# Función principal
main() {
    cleanup
    create_log
    check_dependencies
    welcome_screen
    clone_repo
    list_scripts || exit 0
    install_script || exit 1
    final_screen
    cleanup
}

main
