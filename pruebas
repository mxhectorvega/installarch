#!/usr/bin/env bash

# Strict mode
set -euo pipefail

# Debug mode para encontrar errores
exec 3>&2 2> >(tee -a "$HOME/arch_install.log" >&3)
set -x

# Colors
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
CYAN='\033[0;36m'
RED='\033[0;31m'
PURPLE='\033[0;35m'
NC='\033[0m'

# Variables
LOG_FILE="$HOME/arch_install.log"
INSTALLED_PACKAGES=()
TEMP_DIR="/tmp/arch_installer_$$"

# Crear directorio temporal
mkdir -p "$TEMP_DIR"

# Función de limpieza
cleanup() {
    local status=$?
    if [ $status -ne 0 ]; then
        echo -e "\n${RED}Error detectado. Iniciando sistema de retroceso...${NC}" | tee -a "$LOG_FILE"
        for pkg in "${INSTALLED_PACKAGES[@]}"; do
            echo -e "${YELLOW}Desinstalando: $pkg${NC}" | tee -a "$LOG_FILE"
            sudo pacman -R --noconfirm "$pkg" 2>> "$LOG_FILE" || true
        done
        echo -e "${GREEN}Sistema restaurado${NC}" | tee -a "$LOG_FILE"
    fi
    rm -rf "$TEMP_DIR"
}

trap cleanup EXIT

# Función de bienvenida
show_welcome() {
    clear
    echo -e "${GREEN}Bienvenido al instalador de scripts de mxhectorvega${NC}"
    echo -e "Archivo de registros: ${BLUE}$LOG_FILE${NC}\n"
    sleep 1
}

# Función del menú
show_menu() {
    echo -e "${YELLOW}Lista de Scripts Disponibles:${NC}\n"
    echo -e "${CYAN}1)${NC} Optimizaciones para Pacman, Repo Chaotic y Paru - AUR Helper"
    echo -e "${CYAN}2)${NC} Software flatpak para el usuario doméstico"
    echo -e "${CYAN}3)${NC} Entorno de escritorio Gnome 47.x"
    echo -e "${CYAN}4)${NC} Controladores Wifi para MacBook Pro y Air"
    echo -e "${CYAN}5)${NC} Controladores para impresora Epson L3210"
    echo -e "${CYAN}6)${NC} Configuraciones para Hyprland"
    echo -e "${CYAN}0)${NC} Salir\n"
}

# URLs de los scripts
declare -A SCRIPT_URLS=(
    [1]="https://raw.githubusercontent.com/mxhectorvega/installarch/main/repos"
    [2]="https://raw.githubusercontent.com/mxhectorvega/installarch/main/flatpak"
    [3]="https://raw.githubusercontent.com/mxhectorvega/installarch/main/gnome"
    [4]="https://raw.githubusercontent.com/mxhectorvega/installarch/main/macbook"
    [5]="https://raw.githubusercontent.com/mxhectorvega/installarch/main/impresora"
    [6]="https://raw.githubusercontent.com/mxhectorvega/installarch/main/hyprland"
)

# Función para ejecutar el script seleccionado
execute_script() {
    local url="$1"
    local temp_script="$TEMP_DIR/script.sh"

    echo -e "\n${YELLOW}Descargando script...${NC}" | tee -a "$LOG_FILE"
    if ! curl -s "$url" -o "$temp_script"; then
        echo -e "${RED}Error al descargar el script${NC}" | tee -a "$LOG_FILE"
        return 1
    fi

    chmod +x "$temp_script"
    echo -e "${GREEN}Script descargado correctamente${NC}" | tee -a "$LOG_FILE"
    echo -e "\n${YELLOW}Ejecutando script...${NC}\n" | tee -a "$LOG_FILE"

    # Activar depuración en la ejecución del script
    set -x
    if ! bash "$temp_script" 2>&1 | tee -a "$LOG_FILE"; then
        return 1
    fi
    set +x

    return 0
}

# Función principal
main() {
    : > "$LOG_FILE"
    while true; do
        show_welcome
        show_menu
        read -rp "Seleccione una opción (0-6): " selection
        case $selection in
            0) echo -e "\n${YELLOW}Saliendo del instalador...${NC}"; exit 0 ;;
            [1-6])
                if execute_script "${SCRIPT_URLS[$selection]}"; then
                    echo -e "${GREEN}Instalación completada con éxito.${NC}" | tee -a "$LOG_FILE"
                else
                    echo -e "${RED}Error en la instalación. Revise el log.${NC}" | tee -a "$LOG_FILE"
                fi
                ;;
            *) echo -e "\n${RED}Opción inválida. Intente de nuevo.${NC}"; sleep 2 ;;
        esac
    done
}

main "$@"
