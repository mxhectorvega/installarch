#!/bin/sh

# Variables globales
REPO_URL="https://github.com/mxhectorvega/installarch"
REPO_DIR="$HOME/installarch"
LOG_FILE="$HOME/installarch.log"
ROOT_PASSWORD=""

# Función para limpiar residuos
cleanup() {
    rm -rf "$REPO_DIR"
    rm -f "$LOG_FILE"
}

# Función para manejar errores
handle_error() {
    echo "Error: $1" >> "$LOG_FILE"
    whiptail --title "Error" --msgbox "Ocurrió un error: $1" 8 78
    cleanup
    exit 1
}

# Función para clonar el repositorio
clone_repo() {
    if [ -d "$REPO_DIR" ]; then
        rm -rf "$REPO_DIR" || handle_error "No se pudo borrar el directorio existente."
    fi
    git clone "$REPO_URL" "$REPO_DIR" || handle_error "No se pudo clonar el repositorio."
}

# Función para satisfacer dependencias
install_dependencies() {
    for dep in whiptail git; do
        if ! command -v "$dep" > /dev/null 2>&1; then
            pacman -Sy --noconfirm "$dep" || handle_error "No se pudo instalar la dependencia: $dep"
        fi
    done
}

# Función para mostrar la pantalla de bienvenida
welcome_screen() {
    whiptail --title "Bienvenido" --yesno "Bienvenido al instalador de scripts de mxhectorvega.\n\nEl archivo de registros se almacenará en: $LOG_FILE\n\n¿Desea continuar?" 12 78
    if [ $? -eq 0 ]; then
        install_dependencies
        clone_repo
    else
        cleanup
        exit 0
    fi
}

# Función para mostrar la lista de scripts
list_scripts() {
    scripts=$(find "$REPO_DIR" -type f -executable ! -name "*.*" | awk -F/ '{print NR, $NF}')
    selected_script=$(whiptail --title "Lista de Scripts" --menu "Seleccione un script para ejecutar:" 20 78 10 $scripts 3>&1 1>&2 2>&3)
    if [ $? -eq 0 ]; then
        execute_script "$selected_script"
    else
        welcome_screen
    fi
}

# Función para ejecutar un script
execute_script() {
    script_name=$(echo "$1" | awk '{print $2}')
    script_path="$REPO_DIR/$script_name"
    steps=$(grep -c '^step_' "$script_path")
    progress=0

    {
        while [ $progress -lt $steps ]; do
            progress=$((progress + 1))
            echo $((progress * 100 / steps))
            sleep 1
        done
    } | whiptail --gauge "Instalando $script_name..." 6 50 0

    if [ $? -eq 0 ]; then
        whiptail --title "Éxito" --msgbox "El script $script_name se ha ejecutado correctamente." 8 78
    else
        handle_error "La instalación del script $script_name falló."
    fi
}

# Función para mostrar la pantalla final
final_screen() {
    whiptail --title "Finalizado" --msgbox "♥️ Suscríbete! 🌐 https://www.youtube.com/mxhectorvega" 8 78
    if whiptail --title "Registros" --yesno "¿Desea ver el archivo de registros?" 8 78; then
        whiptail --textbox "$LOG_FILE" 20 78 --scrolltext
    fi
    cleanup
}

# Inicio del script
welcome_screen
list_scripts
final_screen
