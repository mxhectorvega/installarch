#!/bin/sh
# Script de instalación para Arch Linux

# Variables globales
LOG_FILE="$HOME/installarch.log"
REPO_URL="https://github.com/mxhectorvega/installarch"
CLONE_DIR="/tmp/installarch"
ROOT_PASSWORD=""

# Funciones de utilidad
log() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') - $1" >> "$LOG_FILE"
}

cleanup() {
    log "Limpiando residuos y temporales..."
    rm -rf "$CLONE_DIR"
}

fail() {
    log "Error: $1"
    echo "Error: $1"
    cleanup
    exit 1
}

# Pantalla de Bienvenida
welcome_screen() {
    clear
    echo "============================================"
    echo " Bienvenido al instalador de scripts de mxhectorvega"
    echo "============================================"
    echo "Archivo de registros: $LOG_FILE"
    echo "============================================"
    echo "1. Iniciar"
    echo "2. Cancelar"
    echo "============================================"
    read -p "Seleccione una opción: " choice

    case $choice in
        1)
            log "Iniciando instalación..."
            install_dependencies
            clone_repository
            list_scripts
            ;;
        2)
            log "Instalación cancelada por el usuario."
            cleanup
            exit 0
            ;;
        *)
            fail "Opción no válida."
            ;;
    esac
}

# Instalar dependencias
install_dependencies() {
    log "Instalando dependencias..."
    sudo pacman -Sy --noconfirm git base-devel || fail "No se pudieron instalar las dependencias."
}

# Clonar repositorio
clone_repository() {
    log "Clonando repositorio..."
    git clone "$REPO_URL" "$CLONE_DIR" || fail "No se pudo clonar el repositorio."
}

# Listar scripts
list_scripts() {
    clear
    echo "============================================"
    echo " Lista de scripts disponibles"
    echo "============================================"
    scripts=$(find "$CLONE_DIR" -type f -executable ! -name "*.*" | awk -F/ '{print NR, $NF}')
    echo "$scripts" | awk '{printf "%-5s %s\n", $1, $2}'
    echo "============================================"
    echo "1. Siguiente"
    echo "2. Atrás"
    echo "3. Cancelar"
    echo "============================================"
    read -p "Seleccione una opción: " choice

    case $choice in
        1)
            read -p "Seleccione el número del script a ejecutar: " script_num
            script_path=$(echo "$scripts" | awk -v num="$script_num" 'NR==num {print $2}')
            [ -z "$script_path" ] && fail "Script no válido."
            execute_script "$script_path"
            ;;
        2)
            welcome_screen
            ;;
        3)
            log "Instalación cancelada por el usuario."
            cleanup
            exit 0
            ;;
        *)
            fail "Opción no válida."
            ;;
    esac
}

# Ejecutar script
execute_script() {
    script_path=$1
    log "Ejecutando script: $script_path"
    clear
    echo "============================================"
    echo " Instalando $script_path"
    echo "============================================"

    # Simulación de barra de progreso
    steps=10
    for i in $(seq 1 $steps); do
        echo "Progreso: $i/$steps"
        sleep 1
    done

    # Ejecutar el script
    if [ "$(id -u)" -eq 0 ]; then
        sudo -u $USER "$script_path" || fail "Error al ejecutar el script."
    else
        "$script_path" || fail "Error al ejecutar el script."
    fi

    log "Script ejecutado correctamente."
    final_screen
}

# Pantalla final
final_screen() {
    clear
    echo "============================================"
    echo " ♥️ Suscríbete! 🌐 https://www.youtube.com/mxhectorvega"
    echo "============================================"
    echo "1. Finalizar"
    echo "2. Mostrar .log"
    echo "============================================"
    read -p "Seleccione una opción: " choice

    case $choice in
        1)
            log "Instalación finalizada."
            cleanup
            exit 0
            ;;
        2)
            less "$LOG_FILE"
            final_screen
            ;;
        *)
            fail "Opción no válida."
            ;;
    esac
}

# Iniciar el instalador
welcome_screen
